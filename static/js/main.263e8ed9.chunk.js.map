{"version":3,"sources":["logo.svg","web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","App","state","manager","players","balance","value","message","onSubmit","event","a","preventDefault","getAccounts","accounts","setState","lottery","methods","enter","send","from","utils","toWei","onClick","pickWinner","call","getPlayers","getBalance","options","address","this","length","fromWei","onChange","target","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.263e8ed9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Web3 from \"web3\";\nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\nconst web3 = new Web3(window.ethereum);\nexport default web3;","import web3 from './web3';\n\nconst address = '0x29F26196d00bfB2fd26A812ff70b398b4bE3e005';\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pickWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}];\n// this line below connects to the local instance of our contract which \n// has been deployed on the EVM\n//const contractJson = fs.readFileSync('path_to_abi_file.json');\n//const abi = JSON.parse(contractJson);\nexport default new web3.eth.Contract(abi, address);\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport web3 from './web3';\nimport lottery from './lottery';\n/*\njsx displayed to browser in this call\n*/\nclass App extends React.Component {\n  state = {\n    manager: '',\n    players: [], \n    balance: '',\n    value: '',\n    message: ''\n  };\n  async componentDidMount() {  \n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n\n    this.setState({ manager, players, balance });\n  }\n  onSubmit = async (event) => { \n    event.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n    this.setState({message: 'Waiting on transaction succes....'})\n\n    await lottery.methods.enter().send({\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value, 'ether')\n    });\n    this.setState({ message: 'You have been entered!' })\n    \n  };\n  onClick = async () => { \n    const accounts = await web3.eth.getAccounts();\n    \n    this.setState({message: 'Waiting on transaction succes....'})\n    await lottery.methods.pickWinner().send({\n      from: accounts[0]\n      \n    });\n    this.setState({message: 'A winner has been picked!'})\n  };\n\n  render() {\n    return (\n      <div>\n          \n        <h2>Lottery Contract</h2>\n        <p> \n          \n          This lottery contract is managed by {this.state.manager}.\n          There are currently {this.state.players.length} people entered,\n          competing to win {web3.utils.fromWei(this.state.balance,'ether')} ether!\n        </p>\n\n        <hr />\n        <form onSubmit ={this.onSubmit}>\n            <h4> Want to try your luck?</h4>\n            <div>\n              \n              <label>Amount of ether to enter</label>\n              <input\n                value ={this.state.value}\n                onChange={event =>this.setState({ value: event.target.value })}\n              />\n              \n            </div> \n            \n            <button>Enter </button>\n        </form>\n        <hr /> \n        <h4>Ready to pick a winner?</h4>\n        \n        <button onClick={this.onClick}>Pick a winner! </button>\n        <hr />\n        <h1>{this.state.message}</h1>\n        </div>\n      \n      \n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}